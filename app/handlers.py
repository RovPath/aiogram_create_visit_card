from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext

import app.keyboards as kb
from app.state import Create_Visit

router = Router()


@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer("test", reply_markup=kb.main_non_reg)


@router.message(F.text == "–°–æ–∑–¥–∞—Ç—å –≤–∏–∑–∏—Ç–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É")
async def F1_create_visit(message: Message, state: FSMContext):
    text = (
        "üßæ <b>–®–∞–≥ 1 –∏–∑ 8</b>\n"
        "üë§ <b>–í–∞—à–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—è</b>\n"
        "\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é.\n"
        "–≠—Ç–æ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –≤–∞—à–µ–π –≤–∏–∑–∏—Ç–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–µ.\n"
        "\n"
        "üìå <i>–ü—Ä–∏–º–µ—Ä:</i> <code>–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤</code>"
    )
    await state.set_state(Create_Visit.full_name)
    await message.answer(text, parse_mode="HTML")


@router.message(Create_Visit.full_name, F.text)
async def F2_create_visit(message: Message, state: FSMContext):
    text = (
        "üßæ <b>–®–∞–≥ 2 –∏–∑ 8</b>\n"
        "üëî <b>–í–∞—à–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å</b>\n"
        "\n"
        "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∏–ª–∏ –¥–æ–ª–∂–Ω–æ—Å—Ç—å.\n"
        "–û–Ω–∞ –±—É–¥–µ—Ç —É–∫–∞–∑–∞–Ω–∞ –≤ –≤–∞—à–µ–π –∫–∞—Ä—Ç–æ—á–∫–µ.\n"
        "\n"
        "üìå <i>–ü—Ä–∏–º–µ—Ä:</i> <code>–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç</code>"
    )
    await state.update_data(full_name=message.text)
    await state.set_state(Create_Visit.Specialization)
    await message.answer(text, parse_mode="HTML")


@router.message(Create_Visit.Specialization, F.text)
async def F3_create_visit(message: Message, state: FSMContext):
    text = (
        "üßæ <b>–®–∞–≥ 3 –∏–∑ 8</b>\n"
        "üìß <b>–í–∞—à email –¥–ª—è —Å–≤—è–∑–∏</b>\n"
        "\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à email.\n"
        "–ù–∞ –Ω–µ–≥–æ —Å–º–æ–≥—É—Ç –ø–∏—Å–∞—Ç—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã –∏–ª–∏ –∫–æ–ª–ª–µ–≥–∏.\n"
        "\n"
        "üìå <i>–ü—Ä–∏–º–µ—Ä:</i> <code>ivanov@example.com</code>"
    )
    await state.update_data(Specialization=message.text)
    await state.set_state(Create_Visit.email)
    await message.answer(text, parse_mode="HTML")


@router.message(Create_Visit.email, F.text)
async def F4_create_visit(message: Message, state: FSMContext):
    text = (
        "üßæ <b>–®–∞–≥ 4 –∏–∑ 8</b>\n"
        "üìç <b>–í–∞—à –≥–æ—Ä–æ–¥ –∏ —Å—Ç—Ä–∞–Ω–∞</b>\n"
        "\n"
        "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥ –∏ —Å—Ç—Ä–∞–Ω—É –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è.\n"
        "–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å –≤–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ.\n"
        "–ï—Å–ª–∏ –≤—ã –Ω–µ —Ö–æ—Ç–∏—Ç–µ —É–∫–∞–∑—ã–≤–∞—Ç—å ‚Äî –Ω–∞–∂–º–∏—Ç–µ ¬´–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å¬ª.\n"
        "\n"
        "üìå <i>–ü—Ä–∏–º–µ—Ä:</i> <code>–ú–æ—Å–∫–≤–∞, –†–æ—Å—Å–∏—è</code>"
    )
    await state.update_data(email=message.text)
    await state.set_state(Create_Visit.location)
    await message.answer(text, parse_mode="HTML", reply_markup=kb.skip_keyboard_location)


@router.message(Create_Visit.location, F.text & ~F.text.startswith("‚¨ÖÔ∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"))
async def F4_create_visit_location(message: Message, state: FSMContext):
    text = (
        "üßæ <b>–®–∞–≥ 5 –∏–∑ 8</b>\n"
        "üîó <b>–î–æ–±–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è —Å–≤—è–∑–∏</b>\n"
        "\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º –Ω–∏–∂–µ,\n"
        "–∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ—é —Å—Å—ã–ª–∫—É –≤ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ.\n"
        "–ï—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–æ ‚Äî –Ω–∞–∂–º–∏—Ç–µ ¬´–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å¬ª."
    )
    await state.update_data(location=message.text)
    await state.set_state(Create_Visit.add_website)
    await message.answer(text, parse_mode="HTML", reply_markup=kb.website_keyboard())


@router.callback_query(F.data == "skip_location", Create_Visit.location)
async def F5_create_visit(callback: CallbackQuery, state: FSMContext):
    text = (
        "üßæ <b>–®–∞–≥ 5 –∏–∑ 8</b>\n"
        "üîó <b>–î–æ–±–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è —Å–≤—è–∑–∏</b>\n"
        "\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º –Ω–∏–∂–µ,\n"
        "–∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ—é —Å—Å—ã–ª–∫—É –≤ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ.\n"
        "–ï—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–æ ‚Äî –Ω–∞–∂–º–∏—Ç–µ ¬´–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å¬ª."
    )
    await state.update_data(location=None)
    await state.set_state(Create_Visit.add_website)
    await callback.message.edit_text(text, parse_mode="HTML", reply_markup=kb.website_keyboard())
    await callback.answer()


@router.callback_query(F.data == "skip_website", Create_Visit.add_website)
async def F6_skip_website(callback: CallbackQuery, state: FSMContext):
    text = (
        "üí¨ <b>–®–∞–≥ 6 –∏–∑ 8</b>\n"
        "<b>–í–∞—à –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä –¥–ª—è —Å–≤—è–∑–∏</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Telegram-–Ω–∏–∫–Ω–µ–π–º (—Å @) –∏–ª–∏ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä.\n"
        "–û–Ω –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è —Å–≤—è–∑–∏ —Å –≤–∞–º–∏.\n\n"
        "üìå <i>–ü—Ä–∏–º–µ—Ä:</i> <code>@ivanov</code>"
    )

    await state.update_data(add_website=None)
    await state.set_state(Create_Visit.messenger)

    await callback.answer()
    await callback.message.edit_text(text, parse_mode="HTML", disable_web_page_preview=True)


@router.callback_query(F.data.startswith("site_"), Create_Visit.add_website)
async def F6_create_visit(callback: CallbackQuery, state: FSMContext):
    data = callback.data

    if data == "site_other":
        text = (
            "üñãÔ∏è <b>–ù–∞–∑–≤–∞–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã</b>\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É.\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: <code>–í–ö–æ–Ω—Ç–∞–∫—Ç–µ</code>, <code>Telegram</code>, <code>Discord</code> –∏ —Ç.–ø."
        )
        await state.set_state(Create_Visit.custom_website_name)

    else:
        website_name = data.replace("site_", "").capitalize()
        await state.update_data(add_website=website_name)
        await state.set_state(Create_Visit.custom_website_link)

        text = (
            f"üîó <b>–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å</b>\n\n"
            f"–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ:\n"
            f"<b>{website_name}</b>"
        )

    await callback.message.edit_text(text, parse_mode="HTML")
    await callback.answer()


# --- –í–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Å—Ç–æ–º–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã ---
@router.message(Create_Visit.custom_website_name, F.text)
async def process_custom_website_name(message: Message, state: FSMContext):
    await state.update_data(custom_website_name=message.text)
    await state.set_state(Create_Visit.custom_website_link)

    text = "üîó <b>–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å</b>\n\n" "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞ —ç—Ç–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ."
    await message.answer(text, parse_mode="HTML")


@router.message(Create_Visit.custom_website_link, F.text)
async def process_custom_website_link(message: Message, state: FSMContext):
    data = await state.get_data()

    if "custom_website_name" in data:
        website_name = data["custom_website_name"]
        link = message.text.strip()
        final_value = f"{website_name} ({link})"
    else:
        website_name = data["add_website"]
        link = message.text.strip()
        final_value = f"{website_name}: {link}"

    await state.update_data(add_website=final_value)
    await state.set_state(Create_Visit.messenger)

    text = (
        "üí¨ <b>–®–∞–≥ 6 –∏–∑ 8</b>\n"
        "<b>–í–∞—à –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä –¥–ª—è —Å–≤—è–∑–∏</b>\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Telegram-–Ω–∏–∫–Ω–µ–π–º (—Å @) –∏–ª–∏ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä.\n"
        "–û–Ω –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è —Å–≤—è–∑–∏ —Å –≤–∞–º–∏.\n\n"
        "üìå <i>–ü—Ä–∏–º–µ—Ä:</i> <code>@ivanov</code>"
    )
    await message.answer(text, parse_mode="HTML")


@router.message(Create_Visit.messenger, F.text)
async def F7_create_visit(message: Message, state: FSMContext):
    text = (
        "üì∏ <b>–®–∞–≥ 7 –∏–∑ 8</b>\n"
        "üñºÔ∏è <b>–î–æ–±–∞–≤—å—Ç–µ —Å–≤–æ—ë —Ñ–æ—Ç–æ</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å–≤–æ—ë —Ñ–æ—Ç–æ ‚Äî –ª—É—á—à–µ –≤—Å–µ–≥–æ –ø–æ–¥–æ–π–¥—ë—Ç –ø–æ—Ä—Ç—Ä–µ—Ç–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.\n"
        "–û–Ω–æ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –≤–∞—à–µ–π –≤–∏–∑–∏—Ç–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–µ.\n\n"
        "–ï—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å —Ñ–æ—Ç–æ ‚Äî –Ω–∞–∂–º–∏—Ç–µ ¬´–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å¬ª."
    )
    await state.update_data(messenger=message.text)
    await state.set_state(Create_Visit.photo)
    await message.answer(text, parse_mode="HTML")


@router.message(Create_Visit.photo, F.photo)
async def F8_create_visit(message: Message, state: FSMContext):
    text = "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å?"
    await state.update_data(photo=message.photo)
    await message.answer(text, reply_markup=kb.confirm_keyboard)
    await state.clear()
